Project Path: src

Source Tree:

```
src
â”œâ”€â”€ pages
â”‚   â”œâ”€â”€ markdown-page.md
â”‚   â”œâ”€â”€ index.jsx
â”‚   â””â”€â”€ index.module.css
â”œâ”€â”€ css
â”‚   â””â”€â”€ custom.css
â””â”€â”€ components
    â”œâ”€â”€ HomepageHeader
    â”‚   â”œâ”€â”€ index.jsx
    â”‚   â””â”€â”€ styles.module.css
    â””â”€â”€ HomepageFeatures
        â”œâ”€â”€ index.jsx
        â””â”€â”€ styles.module.css

```

`/home/chefron/CAPTCHA/eliza/docs/src/pages/markdown-page.md`:

```md
---
title: Markdown page example
---

# Markdown page example

You don't need React to write simple standalone pages.

```

`/home/chefron/CAPTCHA/eliza/docs/src/pages/index.jsx`:

```jsx
import React from "react";
import useDocusaurusContext from "@docusaurus/useDocusaurusContext";
import HomepageFeatures from "@site/src/components/HomepageFeatures";
import Layout from "@theme/Layout";

import styles from "./index.module.css";
import HomepageHeader from "../components/HomepageHeader";

export default function Home() {
  const { siteConfig } = useDocusaurusContext();
  return (
    <Layout title={`${siteConfig.title}`} description={siteConfig.tagline}>
      <HomepageHeader />
      <main>
        <HomepageFeatures />
      </main>
    </Layout>
  );
}

```

`/home/chefron/CAPTCHA/eliza/docs/src/pages/index.module.css`:

```css
/**
 * CSS files with the .module.css suffix will be treated as CSS modules
 * and scoped locally.
 */

.heroBanner {
  padding: 4rem 0;
  text-align: center;
  position: relative;
  overflow: hidden;
}

@media screen and (max-width: 996px) {
  .heroBanner {
    padding: 2rem;
  }
}

.buttons {
  display: flex;
  align-items: center;
  justify-content: center;
}

```

`/home/chefron/CAPTCHA/eliza/docs/src/css/custom.css`:

```css
/**
 * Any CSS included here will be global. The classic template
 * bundles Infima by default. Infima is a CSS framework designed to
 * work well for content-centric websites.
 */

/* You can override the default Infima variables here. */
:root {
  --ifm-color-primary: #ffa600;
  --ifm-color-primary-dark: #29784c;
  --ifm-color-primary-darker: #277148;
  --ifm-color-primary-darkest: #205d3b;
  --ifm-color-primary-light: #33925d;
  --ifm-color-primary-lighter: #359962;
  --ifm-color-primary-lightest: #3cad6e;
  --ifm-code-font-size: 95%;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.1);
}

/* For readability concerns, you should choose a lighter palette in dark mode. */
[data-theme="dark"] {
  --ifm-color-primary: lightblue;
  --ifm-color-primary-dark: #21af90;
  --ifm-color-primary-darker: #1fa588;
  --ifm-color-primary-darkest: #1a8870;
  --ifm-color-primary-light: #29d5b0;
  --ifm-color-primary-lighter: #32d8b4;
  --ifm-color-primary-lightest: #4fddbf;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.3);
  --ifm-footer-background-color: #ffa600;
}

.footer {
  background-color: #242736;
}

.button--primary {
  background: linear-gradient(
    180deg,
    var(--token-e94f1f99-3833-4c15-8d11-a67e80285705, rgb(249, 140, 19))
      /* {"name":"Orange"} */ 0%,
    rgb(255, 166, 0) 100%
  );
  border: none;
  padding: 1rem 2rem;
  font-size: 1.2rem;
  transition: background 0.3s;
  color: white;
}

.button--primary:hover {
  background: linear-gradient(rgb(255, 156, 43) 0%, rgb(255, 166, 0) 100%);
}

```

`/home/chefron/CAPTCHA/eliza/docs/src/components/HomepageHeader/index.jsx`:

```jsx
import React from "react";
import useDocusaurusContext from "@docusaurus/useDocusaurusContext";
import Heading from "@theme/Heading";

import styles from "./styles.module.css";

function HomepageHeader() {
  const { siteConfig } = useDocusaurusContext();
  return (
    <header className={styles.heroBanner}>
      <div className="container">
        <div className={styles.heroSection}>
          <div>
            <h1 className={styles.heroTitle}>
              eliza is a simple, fast, and{" "}
              <span className={styles.headerTextGradient}>
                lightweight AI agent
              </span>{" "}
              framework
            </h1>
            <p className={styles.heroSubtitle}>{siteConfig.tagline}</p>
            <div className={styles.buttonGroup}>
              <a
                className="button button--primary button--lg"
                href="./docs/intro/#"
              >
                Get Started
              </a>
              <div className={styles.githubButton}>
                <iframe
                  src="https://ghbtns.com/github-btn.html?user=ai16z&repo=eliza&type=star&count=true&size=large"
                  frameborder="0"
                  scrolling="0"
                  width="135"
                  height="30"
                  title="GitHub"
                ></iframe>
              </div>
            </div>
          </div>
          <div className={styles.heroRight}>
            <img
              src="/eliza/img/blurback.png"
              className={styles.blurPhoto}
              alt="blurred"
            />
            <pre className={styles.codeBlock}>
              <code className="language-bash">{`npm install @ai16z/eliza`}</code>
            </pre>
          </div>
        </div>
      </div>
    </header>
  );
}

export default HomepageHeader;

```

`/home/chefron/CAPTCHA/eliza/docs/src/components/HomepageHeader/styles.module.css`:

```css
.heroTitle {
  font-size: 3.2rem;
  font-weight: 700;
  margin-bottom: 1rem;
  line-height: 1.4;
}

.heroSubtitle {
  font-size: 1.5rem;
  opacity: 0.8;
}

.heroSection {
  padding: 6rem 2rem 0rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  margin: 0 auto;
  max-width: 100%;
}

.reg-button {
  background-color: pink;
}

.buttonGroup {
  display: flex;
  gap: 1rem;
}

.githubButton {
  margin-top: 1rem;
}

.heroRight {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
}

.codeBlock {
  display: flex;
  background: #242736;
  color: white;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  position: relative;
  z-index: 1;
  opacity: 0.9;
}

.headerTextGradient {
  background: linear-gradient(180deg, #ffa600 0%, #ff6f00 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.blurPhoto {
  filter: blur(15px);
  border-radius: 45%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Media Queries for Responsiveness */
@media (max-width: 1024px) {
  .heroSection {
    grid-template-columns: 1fr;
    padding: 4rem 1rem 0rem;
    text-align: center;
    gap: 2rem;
  }

  .buttonGroup {
    justify-content: center;
    position: relative;
    z-index: 1;
  }

  .heroTitle {
    font-size: 3rem;
  }

  .heroSubtitle {
    font-size: 1.3rem;
  }
}

@media (max-width: 768px) {
  .heroSection {
    padding: 3rem 1rem 0rem;
  }

  .heroTitle {
    font-size: 2rem;
  }

  .heroSubtitle {
    font-size: 1rem;
  }

  .codeBlock {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

@media (max-width: 480px) {
  .heroSection {
    padding: 2rem 1rem 0rem;
  }

  .heroTitle {
    font-size: 1.5rem;
  }

  .heroSubtitle {
    font-size: 0.9rem;
  }

  .buttonGroup {
    flex-direction: column;
    gap: 0.5rem;
  }

  .githubButton {
    margin-top: 0.5rem;
  }
}

```

`/home/chefron/CAPTCHA/eliza/docs/src/components/HomepageFeatures/index.jsx`:

```jsx
import React from "react";
import clsx from "clsx";
import Heading from "@theme/Heading";
import styles from "./styles.module.css";

const FeatureList = [
  {
    icon: "ðŸ¤–",
    title: "Multi-Agent Framework",
    description: (
      <>
        Build and deploy <strong>autonomous AI agents</strong> with consistent
        personalities across Discord, Twitter, and Telegram. Full support for
        voice, text, and media interactions.
      </>
    ),
  },
  {
    icon: "ðŸ§ ",
    title: "Advanced Capabilities",
    description: (
      <>
        Built-in RAG memory system, document processing, media analysis, and
        autonomous trading capabilities. Supports multiple AI models including
        Llama, GPT-4, and Claude.
      </>
    ),
  },
  {
    icon: "ðŸ”Œ",
    title: "Extensible Design",
    description: (
      <>
        Create custom actions, add new platform integrations, and extend
        functionality through a <b>modular plugin system</b>. Full TypeScript
        support.
      </>
    ),
  },
];

function Feature({ icon, title, description }) {
  return (
    <div className={clsx("col")}>
      <div
        className="margin--md"
        style={{
          height: "100%",
        }}
      >
        <div className="card__body text--left padding--md">
          <icon className={styles.featureIcon}>{icon}</icon>
          <Heading
            as="h3"
            style={{
              color: "var(--ifm-heading-color)",
            }}
          >
            {title}
          </Heading>
          <p>{description}</p>
        </div>
      </div>
    </div>
  );
}

export default function HomepageFeatures() {
  return (
    <section className={styles.features}>
      <div className="container">
        <div className="row">
          <div className={styles.featureGrid}>
            {FeatureList.map((props, idx) => (
              <Feature key={idx} {...props} />
            ))}
          </div>
        </div>
      </div>
    </section>
  );
}

```

`/home/chefron/CAPTCHA/eliza/docs/src/components/HomepageFeatures/styles.module.css`:

```css
.features {
  display: flex;
  align-items: center;
  padding: 2rem 0;
  width: 100%;
  flex-wrap: wrap;
}

.featureSvg {
  height: 200px;
  width: 200px;
}

.featureIcon {
  height: 100px;
  width: 100px;
  font-size: 2rem;
}

.featureGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
}

@media (max-width: 768px) {
  .featureGrid {
    grid-template-columns: repeat(2, 1fr);
    gap: 0rem;
  }

  .featureSvg {
    height: 150px;
    width: 150px;
  }

  .featureIcon {
    height: 80px;
    width: 80px;
    font-size: 1.5rem;
  }
}

@media (max-width: 480px) {
  .featureGrid {
    grid-template-columns: 1fr;
  }

  .featureSvg {
    height: 100px;
    width: 100px;
  }

  .featureIcon {
    height: 60px;
    width: 60px;
    font-size: 1.2rem;
  }
}

```